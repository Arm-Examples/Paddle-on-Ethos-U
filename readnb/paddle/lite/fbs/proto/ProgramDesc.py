# automatically generated by the FlatBuffers compiler, do not modify

# namespace: proto

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ProgramDesc(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsProgramDesc(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ProgramDesc()
        x.Init(buf, n + offset)
        return x

    # ProgramDesc
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ProgramDesc
    def Blocks(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from paddle.lite.fbs.proto.BlockDesc import BlockDesc
            obj = BlockDesc()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ProgramDesc
    def BlocksLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ProgramDesc
    def BlocksIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # ProgramDesc
    def Version(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from paddle.lite.fbs.proto.Version import Version
            obj = Version()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ProgramDesc
    def OpVersionMap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from paddle.lite.fbs.proto.OpVersionMap import OpVersionMap
            obj = OpVersionMap()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def ProgramDescStart(builder): builder.StartObject(3)
def ProgramDescAddBlocks(builder, blocks): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(blocks), 0)
def ProgramDescStartBlocksVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ProgramDescAddVersion(builder, version): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(version), 0)
def ProgramDescAddOpVersionMap(builder, opVersionMap): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(opVersionMap), 0)
def ProgramDescEnd(builder): return builder.EndObject()
