# automatically generated by the FlatBuffers compiler, do not modify

# namespace: ParamDesc_

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class VersionDesc(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsVersionDesc(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = VersionDesc()
        x.Init(buf, n + offset)
        return x

    # VersionDesc
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # VersionDesc
    def Version(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # VersionDesc
    def ModelVersion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def VersionDescStart(builder): builder.StartObject(2)
def VersionDescAddVersion(builder, version): builder.PrependInt32Slot(0, version, 0)
def VersionDescAddModelVersion(builder, modelVersion): builder.PrependInt32Slot(1, modelVersion, 0)
def VersionDescEnd(builder): return builder.EndObject()
